---------
-- TOP --
---------

include "altpll.inc";		-- main clock pll, outputs 160MHz
include "tim.inc";			-- clock generator, outputs 80MHz..20KHz cog clock, plus 2x CTRA/CTRB PLL simulator clock
include "dig.inc";			-- digital core of P8X32A
include "ic_74HC165.inc";	-- 74HC165 shift register

subdesign top
(
	clock_50		: input;		-- clock input

	inp_resn		: input;		-- reset pin
	
	prop_io		[31..0]	: bidir;		-- i/o pins for P8X32A

	ledg	[7..0]	: output;		-- cog leds
)

variable

	pll				: altpll with (
						pll_type = "enhanced",
						operation_mode = "normal",
						inclk0_input_frequency = 20000,		-- 20000ps = 50MHz
						clk0_multiply_by = 104,
						clk0_divide_by = 25);

	clkgen			: tim;

	core			: dig;

	nres			: dffe;

	pin		[31..0]	: tri;
		
	sreg1			: ic_74HC165;
	
	sreg2			: ic_74HC165;

begin

	-- clocks

	pll.inclk[]		= (gnd, clock_50);

	clkgen.clk		= pll.clk[0];
	clkgen.res		= !inp_resn;
	clkgen.cfg[]	= core.cfg[6..0];

	core.clk_pll	= clkgen.clk_pll;
	core.clk_cog	= clkgen.clk_cog;


	-- reset

	nres.clk		= clkgen.clk_cog;
	nres.d		= inp_resn & !core.cfg[7];

	core.nres	= nres.q;


	-- P8X32A pins

	core.pin_in[]	= prop_io[];

	pin[].in			= core.pin_out[];
	pin[].oe			= core.pin_dir[];
	
	prop_io[]		= (pin[31..14].out, sreg1.Q7_n, sreg1.Q7, pin[11..0]);
	
	-- 74HC165 pins
	
	sreg1.CP		= prop_io[0];
	sreg2.CP		= prop_io[0];
	sreg1.CE_n	= prop_io[1];
	sreg2.CE_n	= prop_io[1];
	sreg1.PL_n	= prop_io[2];
	sreg2.PL_n	= prop_io[2];
	sreg1.DS		= sreg2.Q7;
	sreg2.DS		= prop_io[14];
	sreg1.DN[]	= prop_io[11..4];	
	sreg2.DN[]	= prop_io[11..4];	

	-- cog leds

	--ledg[]		= core.cog_led[];
	ledg[]		= pin[23..16].out;

end;
